// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;

int3 dimensions;
int nparticles;
float factor;
float deltaTime;
StructuredBuffer<float> temps1;
StructuredBuffer<float> temps2;
RWStructuredBuffer<float3> positions;
StructuredBuffer<float3> vel1;
StructuredBuffer<float3> vel2;
RWStructuredBuffer<float4> colors;

[numthreads(8,8,8)]
void CSMain(uint3 id : SV_GroupThreadID, uint3 groupID : SV_GroupID)
{
    int globalIndex = (int)(groupID.x * 512 + id.x + id.y * 8 + id.z * 64);
    if (globalIndex < nparticles)
    {
        float3 pos = positions[globalIndex] * 100;
        pos = max(pos, float3(0, 0, 0));
        pos = min(pos, float3(dimensions.x, dimensions.y, dimensions.z));
        int positionIndex = (int)pos.z * dimensions.y * dimensions.x + (int)pos.y * dimensions.x + (int)pos.x;
        positions[globalIndex] += vel1[positionIndex] * deltaTime;
        colors[globalIndex] = float4(0.0, 1.0, 0.0, 1.0);
    }
}
